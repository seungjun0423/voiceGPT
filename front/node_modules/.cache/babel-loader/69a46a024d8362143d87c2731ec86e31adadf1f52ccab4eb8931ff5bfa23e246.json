{"ast":null,"code":"var _jsxFileName = \"/Users/leeseungjun/Private/project/voiceGPT/front/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Body = styled.div`\n  width:100%;\n  height:100%;\n`;\n_c = Body;\nconst Nav = styled.div`\n  box-sizing:border-box;\n  height:150px;\n  background-color:orange;\n  position: -webkit-sticky;\n  position: sticky;\n  top:0;\n  border: solid 0.1px orange ;\n  text-align:center;\n  font-weight:bold;\n  font-size:60px;\n  padding-top:40px;\n  font-family: 'Nanum Gothic', sans-serif;\n  color:#ffffff;\n\n`;\n_c2 = Nav;\nconst App = () => {\n  _s();\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Body, {\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        children: \"\\uC74C\\uC131GPT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Microphone: \", listening ? 'on' : 'off']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.startListening,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: SpeechRecognition.stopListening,\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTranscript,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"oYizlzYiiGms0VaPqIJOPN+U+DE=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Body\");\n$RefreshReg$(_c2, \"Nav\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","styled","SpeechRecognition","useSpeechRecognition","Body","div","Nav","App","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","startListening","stopListening"],"sources":["/Users/leeseungjun/Private/project/voiceGPT/front/src/App.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport styled from \"styled-components\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\n\n\nconst Body = styled.div`\n  width:100%;\n  height:100%;\n`\n\nconst Nav = styled.div`\n  box-sizing:border-box;\n  height:150px;\n  background-color:orange;\n  position: -webkit-sticky;\n  position: sticky;\n  top:0;\n  border: solid 0.1px orange ;\n  text-align:center;\n  font-weight:bold;\n  font-size:60px;\n  padding-top:40px;\n  font-family: 'Nanum Gothic', sans-serif;\n  color:#ffffff;\n\n`\n\nconst App = () => {\n  const { transcript,listening,resetTranscript,browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <>\n      <Body>\n        <Nav>\n          음성GPT\n        </Nav>\n      </Body>\n      <div>\n          <p>Microphone: {listening ? 'on' : 'off'}</p>\n          <button onClick={SpeechRecognition.startListening}>Start</button>\n          <button onClick={SpeechRecognition.stopListening}>Stop</button>\n          <button onClick={resetTranscript}>Reset</button>\n          <p>{transcript}</p>\n        </div>\n    </>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC;AAAA;AAGnF,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAI;AACxB;AACA;AACA,CAAC;AAAA,KAHKD,IAAI;AAKV,MAAME,GAAG,GAAGL,MAAM,CAACI,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAA,MAfKC,GAAG;AAiBT,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM;IAAEC,UAAU;IAACC,SAAS;IAACC,eAAe;IAACC;EAC7C,CAAC,GAAGR,oBAAoB,EAAE;EAG1B,IAAI,CAACQ,gCAAgC,EAAE;IACrC,oBAAO;MAAA,UAAM;IAA2C;MAAA;MAAA;MAAA;IAAA,QAAO;EACjE;EAEA,oBACE;IAAA,wBACE,QAAC,IAAI;MAAA,uBACH,QAAC,GAAG;QAAA,UAAC;MAEL;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACD,eACP;MAAA,wBACI;QAAA,WAAG,cAAY,EAACF,SAAS,GAAG,IAAI,GAAG,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC7C;QAAQ,OAAO,EAAEP,iBAAiB,CAACU,cAAe;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eACjE;QAAQ,OAAO,EAAEV,iBAAiB,CAACW,aAAc;QAAA,UAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC/D;QAAQ,OAAO,EAAEH,eAAgB;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eAChD;QAAA,UAAIF;MAAU;QAAA;QAAA;QAAA;MAAA,QAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACf;EAAA,gBACP;AAGP,CAAC;AAAA,GA1BKD,GAAG;EAAA,QAEHJ,oBAAoB;AAAA;AAAA,MAFpBI,GAAG;AA4BT,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}